{"ast":null,"code":"const authEndpoint = 'http://localhost:4000';\nconst authorizeUrl = `${authEndpoint}/api/zoom/authorize`;\nexport const getAuthorizeUrl = () => {\n  window.location.replace(authorizeUrl);\n};\nexport const getAccessToken = zoomCode => {\n  fetch(`${authEndpoint}/api/zoom/redirect`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      code: zoomCode\n    })\n  }).then(res => res.json()).then(response => {\n    console.log('response == ', response);\n    sessionStorage.setItem('zoomToken', response.access_token);\n    sessionStorage.setItem('zoomRefreshToken', response.refresh_token);\n    sessionStorage.setItem('expireIn', response.expires_in);\n    window.location.replace('/');\n  }).catch(error => {\n    console.error('error == ', error);\n  });\n};\nexport const getRefreshToken = zoomRefreshToken => {\n  fetch(`${authEndpoint}/api/zoom/refresh_token`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      refreshToken: zoomRefreshToken\n    })\n  }).then(res => res.json()).then(response => {\n    sessionStorage.setItem('zoomToken', response.access_token);\n    sessionStorage.setItem('zoomRefreshToken', response.refresh_token);\n    window.location.replace('/');\n  }).catch(error => {\n    console.error(error);\n  });\n};","map":{"version":3,"sources":["C:/projects/zoom-integration/react-sdk/src/CommonUtils.js"],"names":["authEndpoint","authorizeUrl","getAuthorizeUrl","window","location","replace","getAccessToken","zoomCode","fetch","method","headers","body","JSON","stringify","code","then","res","json","response","console","log","sessionStorage","setItem","access_token","refresh_token","expires_in","catch","error","getRefreshToken","zoomRefreshToken","refreshToken"],"mappings":"AAAA,MAAMA,YAAY,GAAG,uBAArB;AACA,MAAMC,YAAY,GAAI,GAAED,YAAa,qBAArC;AAEA,OAAO,MAAME,eAAe,GAAG,MAAM;AACnCC,EAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwBJ,YAAxB;AACD,CAFM;AAIP,OAAO,MAAMK,cAAc,GAAIC,QAAD,IAAc;AAC1CC,EAAAA,KAAK,CAAE,GAAER,YAAa,oBAAjB,EAAsC;AACzCS,IAAAA,MAAM,EAAE,MADiC;AAEzCC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFgC;AAGzCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,IAAI,EAAEP;AADa,KAAf;AAHmC,GAAtC,CAAL,CAOGQ,IAPH,CAOSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPjB,EAQGF,IARH,CAQSG,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,QAA5B;AACAG,IAAAA,cAAc,CAACC,OAAf,CAAuB,WAAvB,EAAoCJ,QAAQ,CAACK,YAA7C;AACAF,IAAAA,cAAc,CAACC,OAAf,CAAuB,kBAAvB,EAA2CJ,QAAQ,CAACM,aAApD;AACAH,IAAAA,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmCJ,QAAQ,CAACO,UAA5C;AACAtB,IAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,GAAxB;AACD,GAdH,EAeGqB,KAfH,CAeUC,KAAD,IAAW;AAChBR,IAAAA,OAAO,CAACQ,KAAR,CAAc,WAAd,EAA2BA,KAA3B;AACD,GAjBH;AAkBD,CAnBM;AAqBP,OAAO,MAAMC,eAAe,GAAIC,gBAAD,IAAsB;AACnDrB,EAAAA,KAAK,CAAE,GAAER,YAAa,yBAAjB,EAA2C;AAC9CS,IAAAA,MAAM,EAAE,MADsC;AAE9CC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFqC;AAG9CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBiB,MAAAA,YAAY,EAAED;AADK,KAAf;AAHwC,GAA3C,CAAL,CAOGd,IAPH,CAOSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPjB,EAQGF,IARH,CAQSG,QAAD,IAAc;AAClBG,IAAAA,cAAc,CAACC,OAAf,CAAuB,WAAvB,EAAoCJ,QAAQ,CAACK,YAA7C;AACAF,IAAAA,cAAc,CAACC,OAAf,CAAuB,kBAAvB,EAA2CJ,QAAQ,CAACM,aAApD;AACArB,IAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,GAAxB;AACD,GAZH,EAaGqB,KAbH,CAaUC,KAAD,IAAW;AAChBR,IAAAA,OAAO,CAACQ,KAAR,CAAcA,KAAd;AACD,GAfH;AAgBD,CAjBM","sourcesContent":["const authEndpoint = 'http://localhost:4000';\r\nconst authorizeUrl = `${authEndpoint}/api/zoom/authorize`;\r\n\r\nexport const getAuthorizeUrl = () => {\r\n  window.location.replace(authorizeUrl);\r\n};\r\n\r\nexport const getAccessToken = (zoomCode) => {\r\n  fetch(`${authEndpoint}/api/zoom/redirect`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({\r\n      code: zoomCode,\r\n    }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => {\r\n      console.log('response == ', response);\r\n      sessionStorage.setItem('zoomToken', response.access_token);\r\n      sessionStorage.setItem('zoomRefreshToken', response.refresh_token);\r\n      sessionStorage.setItem('expireIn', response.expires_in);\r\n      window.location.replace('/');\r\n    })\r\n    .catch((error) => {\r\n      console.error('error == ', error);\r\n    });\r\n};\r\n\r\nexport const getRefreshToken = (zoomRefreshToken) => {\r\n  fetch(`${authEndpoint}/api/zoom/refresh_token`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({\r\n      refreshToken: zoomRefreshToken,\r\n    }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((response) => {\r\n      sessionStorage.setItem('zoomToken', response.access_token);\r\n      sessionStorage.setItem('zoomRefreshToken', response.refresh_token);\r\n      window.location.replace('/');\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}